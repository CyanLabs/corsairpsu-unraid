RMi Output
--------------------
name:           'RM1000i'
vendor:         'CORSAIR'
product:        'RM1000i'
powered:        15469972 (179d. 1h)
uptime:         933172 (10d. 19h)
temp1:           44.5
temp2:           37.2
fan rpm:          0.0
supply volts:   230.0
total watts:     96.0
output0 volts:   12.1
output0 amps:     5.5
output0 watts:   66.0
output1 volts:    5.0
output1 amps:     4.2
output1 watts:   21.0
output2 volts:    3.3
output2 amps:     3.3
output2 watts:   10.5


WIP AXI Output
--------------------
Corsair AXi Series PSU Monitor
(c) 2014 Andras Kovacs - andras@sth.sze.hu
-------------------------------------------

Dongle name: USB to SMB Bridge (Firmware by Ross Fosler)
Dongle version: 0.9
PSU type: AX860i
Fan mode: Auto
Fan speed: 0.00 RPM
Temperature: 39.75 °C
Voltage: 222.00 V
Current: 0.62 A
Input power: 133.38 W
Output power: 118.73 W
Efficiency: 89.02 %
PCIe 00 Rail:    12.00 V, 0.00 A, 0.00 W, OCP disabled (Limit: 40.00 A)
PCIe 01 Rail:    12.02 V, 0.00 A, 0.00 W, OCP enabled  (Limit: 29.94 A)
PCIe 02 Rail:    12.02 V, 0.00 A, 0.00 W, OCP enabled  (Limit: 30.00 A)
PCIe 03 Rail:    12.00 V, 0.00 A, 0.00 W, OCP enabled  (Limit: 29.94 A)
PCIe 04 Rail:    12.02 V, 0.00 A, 0.00 W, OCP enabled  (Limit: 29.94 A)
PCIe 05 Rail:    12.02 V, 0.00 A, 0.00 W, OCP enabled  (Limit: 30.00 A)
ATX Rail:        12.00 V, 0.00 A, 0.00 W, OCP disabled (Limit: 40.00 A)
Peripheral Rail: 12.00 V, 3.00 A, 37.50 W, OCP enabled  (Limit: 29.94 A)
5V Rail:         5.02 V, 3.75 A, 18.65 W
3.3V Rail:       3.31 V, 3.81 A, 12.56 W

Dongle name] => USB to SMB Bridge (Firmware by Ross Fosler)
    [Dongle version] => 0.9
    [PSU type] => AX860i
    [Fan mode] => Auto
    [Fan speed] => 0.00 RPM
    [Temperature] => 39.75 °C
    [Voltage] => 222.00 V
    [Current] => 0.62 A
    [Input power] => 133.38 W
    [Output power] => 118.73 W
    [Efficiency] => 89.02 %
    [PCIe 00 Rail] => 12.00 V, 0.00 A, 0.00 W, OCP disabled (Limit: 40.00 A)
    [PCIe 01 Rail] => 12.02 V, 0.00 A, 0.00 W, OCP enabled  (Limit: 29.94 A)
    [PCIe 02 Rail] => 12.02 V, 0.00 A, 0.00 W, OCP enabled  (Limit: 30.00 A)
    [PCIe 03 Rail] => 12.00 V, 0.00 A, 0.00 W, OCP enabled  (Limit: 29.94 A)
    [PCIe 04 Rail] => 12.02 V, 0.00 A, 0.00 W, OCP enabled  (Limit: 29.94 A)
    [PCIe 05 Rail] => 12.02 V, 0.00 A, 0.00 W, OCP enabled  (Limit: 30.00 A)
    [ATX Rail] => 12.00 V, 0.00 A, 0.00 W, OCP disabled (Limit: 40.00 A)
    [Peripheral Rail] => 12.00 V, 3.00 A, 37.50 W, OCP enabled  (Limit: 29.94 A)
    [5V Rail] => 5.02 V, 3.75 A, 18.65 W
    [3.3V Rail] => 3.31 V, 3.81 A, 12.56 W
)


<?php
$stdout = file_get_contents("text.txt");
$re     = '/(?<key>[^:]+):\s+\'*(?<value>[^\n\']+)\'*\s*/';
preg_match_all($re, $stdout, $matches, PREG_SET_ORDER, 0);
foreach ($matches as $match)
    $data[$match['key']] = $match['value'];
if (!isset($data))
    exit(json_encode(array($stdout)));

$capacity = filter_var($data["PSU type"], FILTER_SANITIZE_NUMBER_INT);
$total = floatval($data['Input power']);
$load = round($total / $capacity * 100);

$rail_5v = explode(",", $data['5V Rail']);
$rail_12v = explode(",", $data['Peripheral Rail']);
$rail_3v = explode(",", $data['3.3V Rail']);

$rail_5v_watts     = floatval($rail_5v[2]);
$rail_12v_watts  = floatval($rail_12v[2]);
$rail_3v_watts     = floatval($rail_3v[2]);

$rail_5v_load     = round(floatval($rail_5v[2]) / $capacity * 100);
$rail_12v_load    = round(floatval($rail_12v[2]) / $capacity * 100);
$rail_3v_load     = round(floatval($rail_3v[2]) / $capacity * 100);

// Sets keys for the 3 outputs to 12v, 5v and 3v
$output0 = substr($data['output0 volts'], 0, strrpos($data['output0 volts'], '.'));
$output1 = substr($data['output1 volts'], 0, strrpos($data['output1 volts'], '.'));
$output2 = substr($data['output2 volts'], 0, strrpos($data['output2 volts'], '.'));



// Removes raw timestamp on uptime / total hours leaving just the Xd, Xh text
//preg_match('/\((.*?)\)/', $data['uptime'], $uptime);
//preg_match('/\((.*?)\)/', $data['powered'], $poweredon);

// Adds the keys and values to an array, named appropiately

$json = array(
    'temp1' => floatval($data["Temperature"]),
    'temp2' => floatval($data["Temperature"]),
    'fan_rpm' => floatval($data["Fan speed"]),
    'capacity' => $capacity,
    "12v_watts" => $rail_12v_watts,
    "5v_watts" => $rail_5v_watts,
    "3v_watts" => $rail_3v_watts,
    'watts' => $total,
    'load' => $load,
	"12v_load" => $rail_12v_load,
	"5v_load" => $rail_5v_load,
	"3v_load" => $rail_3v_load,
    'vendor' => "Corsair",
    'product' => $data["PSU type"],
    'uptime' => 0,
    'uptime_raw' => 0,
    'poweredon' => 0,
    'poweredon_raw' => 0
);

//header('Content-Type: application/json');
echo json_encode($json);
//print_r($data);

/*
$data["Dongle version"] => 0.9
$data["PSU type"] => AX860i
$data["Fan mode"] => Auto
$data["Fan speed"] => 0.00 RPM
$data["Temperature"] => 39.75 °C
$data["Voltage"] => 222.00 V
$data["Current"] => 0.62 A
$data["Input power"] => 133.38 W
$data["Output power"] => 118.73 W
$data["Efficiency"] => 89.02 %
$data["PCIe 00 Rail"] => 12.00 V, 0.00 A, 0.00 W, OCP disabled (Limit: 40.00 A)
$data["PCIe 01 Rail"] => 12.02 V, 0.00 A, 0.00 W, OCP enabled  (Limit: 29.94 A)
$data["PCIe 02 Rail"] => 12.02 V, 0.00 A, 0.00 W, OCP enabled  (Limit: 30.00 A)
$data["PCIe 03 Rail"] => 12.00 V, 0.00 A, 0.00 W, OCP enabled  (Limit: 29.94 A)
$data["PCIe 04 Rail"] => 12.02 V, 0.00 A, 0.00 W, OCP enabled  (Limit: 29.94 A)
$data["PCIe 05 Rail"] => 12.02 V, 0.00 A, 0.00 W, OCP enabled  (Limit: 30.00 A)
$data["ATX Rail"] => 12.00 V, 0.00 A, 0.00 W, OCP disabled (Limit: 40.00 A)
$data["Peripheral Rail"] => 12.00 V, 3.00 A, 37.50 W, OCP enabled  (Limit: 29.94 A)
$data["5V Rail"] => 5.02 V, 3.75 A, 18.65 W
$data["3.3V Rail"] => 3.31 V, 3.81 A, 12.56 W
*/
?>
